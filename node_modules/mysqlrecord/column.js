function Column(column){
	this.name = column.name;
	this.validates = column.validates;
	this.filters = column.filters;
}

var convert_type = Column.convert_type = function( val , type ){

	if( val !== undefined && val !== null ){

		switch(type){

			case 'number' : 
				return parseInt(val) || 0;

			case 'string' :
				return val.toString();

			case 'date' :
				return new Date(val);

		}

	}

}

Column.validate = function( val , validation ){

	val = convert_type(val,validation.type);

	if( validation.not_null && (val == '' || val == null || val == undefined || (val.getTime && isNaN(val.getTime())) || (isNaN(val) && typeof val == 'number') )){
		return false;
	}
	
	if(validation.type !== 'date' && typeof val != validation.type){
		return false;
	}

	if( validation.type === 'date' && val.constructor !== Date ){
		return false;
	}

	if( validation.type == 'string' && validation.maxLength && val.length > validation.maxLength ){
		return false;
	}

	if( validation.type == 'number' && validation.max && val > validation.max ){
		return false;
	}

	return true;

};

Column.defaultVal = function( validation ){
	
	switch(validation.type){
		
		case 'string':
			if( validation.not_null ) return '.';
			return '';
		case 'number':
			return 0;
		case 'date':
			return new Date();
		case 'boolean':
			return false;

	}

}

module.exports = Column;
